ServerRoot "/etc/httpd"

# Minimum modules needed
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule dir_module modules/mod_dir.so
LoadModule headers_module modules/mod_headers.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule mime_module modules/mod_mime.so
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule systemd_module modules/mod_systemd.so
LoadModule unixd_module modules/mod_unixd.so

# This file configures all the proxy modules:
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_connect_module modules/mod_proxy_connect.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
# Not sure if we need these:
LoadModule proxy_express_module modules/mod_proxy_express.so
LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so

TypesConfig /etc/mime.types

User apache
Group apache

ServerTokens prod

Listen 80
Listen 443

ErrorLog logs/error_log

LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
CustomLog logs/access_log combined

<Directory />
  AllowOverride None
  Require all denied
</Directory>

<VirtualHost *:80>
  # Letsencrypt ACME challenges
  DocumentRoot /var/www/html
  RewriteEngine on
  RewriteCond %{REQUEST_URI} !^/.well-known/acme-challenge
  RewriteRule (.*) https://{{ ansible_fqdn }}$1 [R=301,L]
  <Location /.well-known/acme-challenge>
    Require all granted
  </Location>
</VirtualHost>

<VirtualHost *:443>
  SSLEngine on
  SSLProtocol all -SSLv2 -SSLv3
  SSLHonorCipherOrder On
  SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
  SSLCertificateFile    {{ ssl_cert }}
  SSLCertificateKeyFile {{ ssl_key }}
  {% if ssl_chain is defined %}
  SSLCertificateChainFile {{ ssl_chain }}
  {% endif %}

  #Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"

  ServerName {{ ansible_fqdn }}

  # Requires "setsebool -P httpd_can_network_connect 1"
  SSLProxyEngine on
  ProxyPreserveHost On
  # Don't verify the HTTPS certs for our atomic-registry containers:
  SSLProxyCheckPeerCN off
  SSLProxyCheckPeerName off
  SSLProxyCheckPeerExpire off

  # Atomic Registry Console:
  ProxyPass "/registry"  "https://localhost:9090/registry"
  ProxyPassReverse "/registry"  "https://localhost:9090/registry"
  ProxyPass "/cockpit/socket" "wss://localhost:9090/cockpit/socket"
  ProxyPass "/cockpit"  "https://localhost:9090/cockpit"
  ProxyPassReverse "/cockpit"  "https://localhost:9090/cockpit"

  # OpenShift master API (for logins):
  ProxyPass "/api"  "https://localhost:8443/api"
  ProxyPassReverse "/api"  "https://localhost:8443/api"
  ProxyPass "/oapi"  "https://localhost:8443/oapi"
  ProxyPassReverse "/oapi"  "https://localhost:8443/oapi"
  ProxyPass "/oauth2callback"  "https://localhost:8443/oauth2callback"
  ProxyPassReverse "/oauth2callback"  "https://localhost:8443/oauth2callback"
  ProxyPass "/oauth"  "https://localhost:8443/oauth"
  ProxyPassReverse "/oauth"  "https://localhost:8443/oauth"

  # Docker registry API:
  ProxyPass /.well-known/acme-challenge !
  ProxyPass "/"  "http://localhost:5000/"
  ProxyPassReverse "/"  "http://localhost:5000/"
</VirtualHost>
